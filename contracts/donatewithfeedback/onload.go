// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
//////// DO NOT CHANGE THIS FILE! ////////
// Change the json schema instead

package donatewithfeedback

import "github.com/iotaledger/wasp/packages/vm/wasmlib"

func OnLoad() {
    exports := wasmlib.NewScExports()
    exports.AddCall(FuncDonate, funcDonateThunk)
    exports.AddCall(FuncWithdraw, funcWithdrawThunk)
    exports.AddView(ViewDonations, viewDonationsThunk)
}

type FuncDonateParams struct {
    Feedback wasmlib.ScImmutableString // feedback for the person you donate to
}

func funcDonateThunk(ctx *wasmlib.ScCallContext) {
    p := ctx.Params()
    params := &FuncDonateParams {
        Feedback: p.GetString(ParamFeedback),
    }
    funcDonate(ctx, params)
}

type FuncWithdrawParams struct {
    Amount wasmlib.ScImmutableInt // amount to withdraw
}

func funcWithdrawThunk(ctx *wasmlib.ScCallContext) {
    // only SC creator can withdraw donated funds
    if !ctx.From(ctx.ContractCreator()) {
        ctx.Panic("no permission")
    }

    p := ctx.Params()
    params := &FuncWithdrawParams {
        Amount: p.GetInt(ParamAmount),
    }
    funcWithdraw(ctx, params)
}

type ViewDonationsParams struct {
}

func viewDonationsThunk(ctx *wasmlib.ScViewContext) {
    params := &ViewDonationsParams {
    }
    viewDonations(ctx, params)
}
